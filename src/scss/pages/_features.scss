@use "sass:list";
.features {
    background: var(--clr--bg-alt);
    ul {
        @include flex(space-around, center) {
            flex-wrap: wrap;
            row-gap: 56px;
        }
    }
    .card {
        overflow: hidden;
        position: relative;
        width: 100%;
        max-width: 231px;
        min-height: 231px;
        // margin-top: 56px;
        padding: 29px;
        border-radius: $radius;
        background: var(--clr--white);
        cursor: pointer;
        box-shadow: 2px 2px 2px #00000040;
        z-index: 1;
        @include before-after {
            @extend %center;
            @include size(0);
            border-radius: inherit;
            opacity: 0;
            transition: $trans*.5 ease-in;
        }
        &::before{
            // background: #f5f5f5;
            background: inherit;
            filter: brightness(93%);
            z-index: -3;
        }
        &:hover {
            &::before {
                opacity: 1;
                @include size(calc(100% - 11px));
            }
        }
        p {
            position: relative;
            opacity: 0;
            margin-top: 25px;
            color: var(--clr--white);
            text-align: center;
            font-size: $fs6;
            line-height: 16.4px;
            text-shadow: 1px 1px #00000040;
            text-shadow: 0.5px 0.5px 2px rgb(0 0 0 / 60%);
            transition: opacity $trans*.5;

        }
        img {
            @extend %center-x;
            top: $top-img;
            min-height: 173px;
            width: calc(100% - 58px);
        }
        //a smart way to generate colors for each card
        //no need to indexes
        @each $group, $content in $colors {
            @if ($group == crd) {
                $i: 1;
                @each $color, $hex in $content {
                    @if (length($hex) == 1) {
                        &:nth-of-type(#{$i}) h3 {
                            color: var(--clr-#{$group}-#{"" + $color});
                        }
                        &:nth-of-type(#{$i}).active::after {
                            background: var(--clr-#{$group}-#{"" + $color});
                        }
                        $i: $i + 1;
                    }
                }
            }
        }
        //another; we need indexes, if crd change his place the loop will not work
        // @for $i from 1 through 6 {.card:nth-child(#{$i}) h3{
        //   color: var(--clr-crd-#{nth(nth(nth(nth($colors, 4), 2), $i), 1)});}}
        &.active {
            h3 {
                color: var(--clr--white);
            }
            p {
                opacity: 1;
                transition: opacity $trans*.5 $trans*.7;

            }
            img {
                opacity: 0.2;
            }
            &::before{
                transition: 0;
                @include size(0 !important)
            }
            &::after{
                opacity: 1;
                @include size(calc(100% - 5px));
                z-index: -1;
            }
        }
    }
}
